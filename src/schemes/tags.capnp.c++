// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: tags.capnp

#include "tags.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<43> b_b1642a9902d01394 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148,  19, 208,   2, 153,  42, 100, 177,
     19,   0,   0,   0,   1,   0,   0,   0,
    126,  73,  57, 179, 136, 239,  50, 217,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 101, 109, 101, 115,  47,
    116,  97, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  84,  97, 103, 115,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     91,  88, 206, 174, 163, 179, 149, 137,
      1,   0,   0,   0,  34,   0,   0,   0,
     84,  97, 103,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     91,  88, 206, 174, 163, 179, 149, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1642a9902d01394 = b_b1642a9902d01394.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1642a9902d01394[] = {
  &s_8995b3a3aece585b,
};
static const uint16_t m_b1642a9902d01394[] = {0};
static const uint16_t i_b1642a9902d01394[] = {0};
const ::capnp::_::RawSchema s_b1642a9902d01394 = {
  0xb1642a9902d01394, b_b1642a9902d01394.words, 43, d_b1642a9902d01394, m_b1642a9902d01394,
  1, 1, i_b1642a9902d01394, nullptr, nullptr, { &s_b1642a9902d01394, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_8995b3a3aece585b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     91,  88, 206, 174, 163, 179, 149, 137,
     24,   0,   0,   0,   1,   0,   2,   0,
    148,  19, 208,   2, 153,  42, 100, 177,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 101, 109, 101, 115,  47,
    116,  97, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  84,  97, 103, 115,  46,
     84,  97, 103,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8995b3a3aece585b = b_8995b3a3aece585b.words;
#if !CAPNP_LITE
static const uint16_t m_8995b3a3aece585b[] = {1, 0};
static const uint16_t i_8995b3a3aece585b[] = {0, 1};
const ::capnp::_::RawSchema s_8995b3a3aece585b = {
  0x8995b3a3aece585b, b_8995b3a3aece585b.words, 48, nullptr, m_8995b3a3aece585b,
  0, 2, i_8995b3a3aece585b, nullptr, nullptr, { &s_8995b3a3aece585b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Tags
constexpr uint16_t Tags::_capnpPrivate::dataWordSize;
constexpr uint16_t Tags::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Tags::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tags::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Tags::Tag
constexpr uint16_t Tags::Tag::_capnpPrivate::dataWordSize;
constexpr uint16_t Tags::Tag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Tags::Tag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tags::Tag::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



